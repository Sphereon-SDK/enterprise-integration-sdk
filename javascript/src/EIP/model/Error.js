/**
 * Enterprise Integration API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1
 * Contact: dev@sphereon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['EIP/ApiClient', 'EIP/model/Error'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Error'));
  } else {
    // Browser globals (root is window)
    if (!root.EnterpriseIntegrationApi) {
      root.EnterpriseIntegrationApi = {};
    }
    root.EnterpriseIntegrationApi.Error = factory(root.EnterpriseIntegrationApi.ApiClient, root.EnterpriseIntegrationApi.Error);
  }
}(this, function(ApiClient, Error) {
  'use strict';




  /**
   * The Error model module.
   * @module EIP/model/Error
   * @version 0.1
   */

  /**
   * Constructs a new <code>Error</code>.
   * An error
   * @alias module:EIP/model/Error
   * @class
   * @param code {String} 
   * @param level {module:EIP/model/Error.LevelEnum} 
   * @param message {String} 
   */
  var exports = function(code, level, message) {
    var _this = this;

    _this['code'] = code;
    _this['level'] = level;

    _this['message'] = message;
  };

  /**
   * Constructs a <code>Error</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:EIP/model/Error} obj Optional instance to populate.
   * @return {module:EIP/model/Error} The populated <code>Error</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('code')) {
        obj['code'] = ApiClient.convertToType(data['code'], 'String');
      }
      if (data.hasOwnProperty('level')) {
        obj['level'] = ApiClient.convertToType(data['level'], 'String');
      }
      if (data.hasOwnProperty('cause')) {
        obj['cause'] = Error.constructFromObject(data['cause']);
      }
      if (data.hasOwnProperty('message')) {
        obj['message'] = ApiClient.convertToType(data['message'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {String} code
   */
  exports.prototype['code'] = undefined;
  /**
   * @member {module:EIP/model/Error.LevelEnum} level
   */
  exports.prototype['level'] = undefined;
  /**
   * @member {module:EIP/model/Error} cause
   */
  exports.prototype['cause'] = undefined;
  /**
   * @member {String} message
   */
  exports.prototype['message'] = undefined;


  /**
   * Allowed values for the <code>level</code> property.
   * @enum {String}
   * @readonly
   */
  exports.LevelEnum = {
    /**
     * value: "INFO"
     * @const
     */
    "INFO": "INFO",
    /**
     * value: "WARNING"
     * @const
     */
    "WARNING": "WARNING",
    /**
     * value: "FATAL"
     * @const
     */
    "FATAL": "FATAL"  };


  return exports;
}));


