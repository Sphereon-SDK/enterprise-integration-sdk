/**
 * Enterprise Integration API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1
 * Contact: dev@sphereon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['EIP/ApiClient', 'EIP/model/StreamLocation'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./StreamLocation'));
  } else {
    // Browser globals (root is window)
    if (!root.EnterpriseIntegrationApi) {
      root.EnterpriseIntegrationApi = {};
    }
    root.EnterpriseIntegrationApi.DocumentDetails = factory(root.EnterpriseIntegrationApi.ApiClient, root.EnterpriseIntegrationApi.StreamLocation);
  }
}(this, function(ApiClient, StreamLocation) {
  'use strict';




  /**
   * The DocumentDetails model module.
   * @module EIP/model/DocumentDetails
   * @version 0.1
   */

  /**
   * Constructs a new <code>DocumentDetails</code>.
   * A structure containing details about the document name, size, data or data location etc.
   * @alias module:EIP/model/DocumentDetails
   * @class
   * @param streamLocation {module:EIP/model/StreamLocation} The storage location of the binary stream
   */
  var exports = function(streamLocation) {
    var _this = this;


    _this['streamLocation'] = streamLocation;


  };

  /**
   * Constructs a <code>DocumentDetails</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:EIP/model/DocumentDetails} obj Optional instance to populate.
   * @return {module:EIP/model/DocumentDetails} The populated <code>DocumentDetails</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('fileName')) {
        obj['fileName'] = ApiClient.convertToType(data['fileName'], 'String');
      }
      if (data.hasOwnProperty('streamLocation')) {
        obj['streamLocation'] = StreamLocation.constructFromObject(data['streamLocation']);
      }
      if (data.hasOwnProperty('fileSize')) {
        obj['fileSize'] = ApiClient.convertToType(data['fileSize'], 'Number');
      }
      if (data.hasOwnProperty('contentType')) {
        obj['contentType'] = ApiClient.convertToType(data['contentType'], 'String');
      }
    }
    return obj;
  }

  /**
   * The original file name
   * @member {String} fileName
   */
  exports.prototype['fileName'] = undefined;
  /**
   * The storage location of the binary stream
   * @member {module:EIP/model/StreamLocation} streamLocation
   */
  exports.prototype['streamLocation'] = undefined;
  /**
   * The file size / stream length
   * @member {Number} fileSize
   */
  exports.prototype['fileSize'] = undefined;
  /**
   * The content type of the document
   * @member {String} contentType
   */
  exports.prototype['contentType'] = undefined;



  return exports;
}));


