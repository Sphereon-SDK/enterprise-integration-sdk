/**
 * Enterprise Integration API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1
 * Contact: dev@sphereon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['EIP/ApiClient', 'EIP/model/DocumentDetails'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./DocumentDetails'));
  } else {
    // Browser globals (root is window)
    if (!root.EnterpriseIntegrationApi) {
      root.EnterpriseIntegrationApi = {};
    }
    root.EnterpriseIntegrationApi.DocumentPayload = factory(root.EnterpriseIntegrationApi.ApiClient, root.EnterpriseIntegrationApi.DocumentDetails);
  }
}(this, function(ApiClient, DocumentDetails) {
  'use strict';




  /**
   * The DocumentPayload model module.
   * @module EIP/model/DocumentPayload
   * @version 0.1
   */

  /**
   * Constructs a new <code>DocumentPayload</code>.
   * A document payload containing file info and meta data.
   * @alias module:EIP/model/DocumentPayload
   * @class
   */
  var exports = function() {
    var _this = this;




  };

  /**
   * Constructs a <code>DocumentPayload</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:EIP/model/DocumentPayload} obj Optional instance to populate.
   * @return {module:EIP/model/DocumentPayload} The populated <code>DocumentPayload</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('documentDetails')) {
        obj['documentDetails'] = DocumentDetails.constructFromObject(data['documentDetails']);
      }
      if (data.hasOwnProperty('metaDataPayloadType')) {
        obj['metaDataPayloadType'] = ApiClient.convertToType(data['metaDataPayloadType'], 'String');
      }
      if (data.hasOwnProperty('metaDataPayload')) {
        obj['metaDataPayload'] = ApiClient.convertToType(data['metaDataPayload'], 'String');
      }
    }
    return obj;
  }

  /**
   * A structure containing details about the document name, size, data or data location etc.
   * @member {module:EIP/model/DocumentDetails} documentDetails
   */
  exports.prototype['documentDetails'] = undefined;
  /**
   * The markup type of the meta data payload
   * @member {module:EIP/model/DocumentPayload.MetaDataPayloadTypeEnum} metaDataPayloadType
   */
  exports.prototype['metaDataPayloadType'] = undefined;
  /**
   * The meta data payload
   * @member {String} metaDataPayload
   */
  exports.prototype['metaDataPayload'] = undefined;


  /**
   * Allowed values for the <code>metaDataPayloadType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.MetaDataPayloadTypeEnum = {
    /**
     * value: "JSON"
     * @const
     */
    "JSON": "JSON",
    /**
     * value: "XML"
     * @const
     */
    "XML": "XML"  };


  return exports;
}));


