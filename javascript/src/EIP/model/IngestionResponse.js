/**
 * Enterprise Integration API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1
 * Contact: dev@sphereon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['EIP/ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.EnterpriseIntegrationApi) {
      root.EnterpriseIntegrationApi = {};
    }
    root.EnterpriseIntegrationApi.IngestionResponse = factory(root.EnterpriseIntegrationApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The IngestionResponse model module.
   * @module EIP/model/IngestionResponse
   * @version 0.1
   */

  /**
   * Constructs a new <code>IngestionResponse</code>.
   * The response from the ingestion controller.
   * @alias module:EIP/model/IngestionResponse
   * @class
   * @param deliveryStatus {module:EIP/model/IngestionResponse.DeliveryStatusEnum} The deliveryStatus of the document
   */
  var exports = function(deliveryStatus) {
    var _this = this;




    _this['deliveryStatus'] = deliveryStatus;

  };

  /**
   * Constructs a <code>IngestionResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:EIP/model/IngestionResponse} obj Optional instance to populate.
   * @return {module:EIP/model/IngestionResponse} The populated <code>IngestionResponse</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('requestTime')) {
        obj['requestTime'] = ApiClient.convertToType(data['requestTime'], 'Date');
      }
      if (data.hasOwnProperty('deliveryTime')) {
        obj['deliveryTime'] = ApiClient.convertToType(data['deliveryTime'], 'Date');
      }
      if (data.hasOwnProperty('documentId')) {
        obj['documentId'] = ApiClient.convertToType(data['documentId'], 'String');
      }
      if (data.hasOwnProperty('deliveryStatus')) {
        obj['deliveryStatus'] = ApiClient.convertToType(data['deliveryStatus'], 'String');
      }
      if (data.hasOwnProperty('statusMessage')) {
        obj['statusMessage'] = ApiClient.convertToType(data['statusMessage'], 'String');
      }
    }
    return obj;
  }

  /**
   * The request date/time for this document in ISO 8601 format
   * @member {Date} requestTime
   */
  exports.prototype['requestTime'] = undefined;
  /**
   * The delivery date/time of this job in ISO 8601 format
   * @member {Date} deliveryTime
   */
  exports.prototype['deliveryTime'] = undefined;
  /**
   * @member {String} documentId
   */
  exports.prototype['documentId'] = undefined;
  /**
   * The deliveryStatus of the document
   * @member {module:EIP/model/IngestionResponse.DeliveryStatusEnum} deliveryStatus
   */
  exports.prototype['deliveryStatus'] = undefined;
  /**
   * A delivery status message, which can be informational, warning or error. A message here does not indicate an error per se
   * @member {String} statusMessage
   */
  exports.prototype['statusMessage'] = undefined;


  /**
   * Allowed values for the <code>deliveryStatus</code> property.
   * @enum {String}
   * @readonly
   */
  exports.DeliveryStatusEnum = {
    /**
     * value: "CREATED"
     * @const
     */
    "CREATED": "CREATED",
    /**
     * value: "QUEUED"
     * @const
     */
    "QUEUED": "QUEUED",
    /**
     * value: "ON_HOLD"
     * @const
     */
    "ON_HOLD": "ON_HOLD",
    /**
     * value: "PROCESSING"
     * @const
     */
    "PROCESSING": "PROCESSING",
    /**
     * value: "DELIVERED"
     * @const
     */
    "DELIVERED": "DELIVERED",
    /**
     * value: "ERROR"
     * @const
     */
    "ERROR": "ERROR"  };


  return exports;
}));


